{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "apiProfile": "2019-03-01-hybrid",
    "parameters": {
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Which Azure Location (Region) to deploy to. Defaults to the same region as the resource group"
            }
        },
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Username for the Fortigate virtual appliances."
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Password for the Fortigate virtual appliances."
            }
        },
        "adminPublicKey": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "SSH Public Key for the virtual machine. Format: https://www.ssh.com/ssh/key/"
            }
        },
        "FortiGateNamePrefix": {
            "type": "String",
            "metadata": {
                "description": "Name for FortiGate virtual appliances (A & B will be appended to the end of each respectively)."
            }
        },
        "FortiGateImageSKU": {
            "defaultValue": "fortinet_fg-vm",
            "allowedValues": [
                "fortinet_fg-vm",
                "fortinet_fg-vm_payg_20190624"
            ],
            "type": "String",
            "metadata": {
                "description": "Identifies whether to to use PAYG (on demand licensing) or BYOL license model (where license is purchased separately)"
            }
        },
        "FortiGateImageVersion": {
            "defaultValue": "latest",
            "type": "String",
            "metadata": {
                "description": "Select image version."
            }
        },
        "FortiGateAdditionalConfig": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "FortiGate CLI configuration items to add to the basic configuration. You should use the \\n character to delimit newlines, though a multiline string should generally be OK as well"
            }
        },
        "instanceType": {
            "defaultValue": "Standard_DS3_v2",
            "type": "String",
            "metadata": {
                "description": "Virtual Machine size selection"
            }
        },
        "publicIPNewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String",
            "metadata": {
                "description": "Whether to use an existing public IP or create a new one"
            }
        },
        "publicIPAddressName": {
            "defaultValue": "[concat(parameters('FortiGateNamePrefix'))]",
            "type": "String",
            "metadata": {
                "description": "Name of Public IP address element."
            }
        },
        "publicIP1AllocationMethod": {
            "defaultValue": "Static",
            "allowedValues": [
                "Static",
                "Dynamic"
            ],
            "type": "String",
            "metadata": {
                "description": "Dynamic public IPs change on reboot"
            }
        },
        "vnetNewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String",
            "metadata": {
                "description": "Identify whether to use a new or existing vnet"
            }
        },
        "vnetName": {
            "defaultValue": "[parameters('FortiGateNamePrefix')]",
            "type": "String",
            "metadata": {
                "description": "Name of the Azure virtual network."
            }
        },
        "vnetResourceGroup": {
            "defaultValue": "[resourceGroup().name]",
            "type": "String",
            "metadata": {
                "description": "Resource Group containing the virtual network - or new resource group from above (if new vnet)"
            }
        },
        "vnetAddressPrefixes": {
            "defaultValue": [
                "10.0.0.0/16"
            ],
            "type": "Array",
            "metadata": {
                "description": "Virtual Network Address prefix"
            }
        },
        "Subnet1Name": {
            "defaultValue": "External",
            "type": "String",
            "metadata": {
                "description": "Subnet 1 Name"
            }
        },
        "Subnet1Prefix": {
            "defaultValue": "10.0.1.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 1 Prefix"
            }
        },
        "Subnet2Name": {
            "defaultValue": "Transit",
            "type": "String",
            "metadata": {
                "description": "Subnet 2 Name"
            }
        },
        "Subnet2Prefix": {
            "defaultValue": "10.0.2.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 2 Prefix"
            }
        },
        "Subnet3Name": {
            "defaultValue": "Protected",
            "type": "String",
            "metadata": {
                "description": "Subnet 3 Name"
            }
        },
        "Subnet3Prefix": {
            "defaultValue": "10.0.3.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 3 Prefix"
            }
        },
        "FortinetTags": {
            "defaultValue": {
                "provider": "6EB3B02F-50E5-4A3E-8CB8-2E129258317D"
            },
            "type": "Object"
        },
        "vmLogDiskSizeGB": {
            "defaultValue": 30,
            "type": "Int",
            "metadata": {
                "description": "Size of the log disk for the virtual appliances. Defaults to 30GB"
            }
        },
        "fgaManagementHttpPort": {
            "defaultValue": 50443,
            "type": "Int",
            "metadata": {
                "description": "The port to use for accessing the http management interface of the first Fortigate"
            }
        },
        "fgbManagementHttpPort": {
            "defaultValue": 51443,
            "type": "Int",
            "metadata": {
                "description": "The port to use for accessing the http management interface of the second Fortigate"
            }
        },
        "fgaManagementSshPort": {
            "defaultValue": 50022,
            "type": "Int",
            "metadata": {
                "description": "The port to use for accessing the ssh management interface of the first Fortigate"
            }
        },
        "fgbManagementSshPort": {
            "defaultValue": 51022,
            "type": "Int",
            "metadata": {
                "description": "The port to use for accessing the ssh management interface of the first Fortigate"
            }
        }
    },
    "variables": {
        "compute_AvailabilitySet_FG_Name": "[parameters('FortiGateNamePrefix')]",
        "vnetAddressPrefix": "[string(parameters('vnetAddressPrefixes')[0])]",
        "subnet1Ref": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('Subnet1Name'))]",
        "subnet2Ref": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('Subnet2Name'))]",
        "vmName": "[concat(parameters('FortiGateNamePrefix'),'A')]",
        "vm2Name": "[concat(parameters('FortiGateNamePrefix'),'B')]",
        "vmDiagnosticStorageName": "[toLower(parameters('FortiGateNamePrefix'))]",
        "vmPublicKeyConfiguration": {
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('adminPublicKey')]"
                    }
                ]
            }
        },
        "fortiGateConfig": "[base64(concat(
            'config system probe-response\n',
            ' set mode http-probe\n', 
            'end\n', 
            'config router static\n',
            ' edit 1\n',
            '  set dst ', variables('vnetAddressPrefix'), '\n',
            '  set gateway ', variables('sn2GatewayIP'), '\n',
            '  set device port2\n',
            ' next\n',
            'end\n',
            'config system interface\n',
            ' edit port1\n',
            '  set description ',parameters('Subnet1Name'),'\n',
            '  append allowaccess probe-response\n',
            ' next\n',
            ' edit port2\n',
            '  set description ',parameters('Subnet2Name'),'\n',
            '  set allowaccess ping probe-response\n',
            ' next\n',
            'end\n',
            'config sys admin\n',
            ' edit admin\n',
            '  set password ', parameters('adminPassword'), '\n',
            ' next\n',
            'end\n',
            parameters('FortiGateAdditionalConfig')
        ))]",
        "routeTable2Name": "[concat(parameters('FortiGateNamePrefix'),'-',parameters('Subnet2Name'))]",
        "internalLBName": "[concat(parameters('FortiGateNamePrefix'),'-ILB')]",
        "internalLBFE2Name": "[concat(parameters('FortiGateNamePrefix'),'-ILB-',parameters('Subnet2Name'),'-FrontEnd')]",
        "internalLBBE2Name": "[concat(parameters('FortiGateNamePrefix'),'-ILB-',parameters('Subnet2Name'),'-BackEnd')]",
        "internalLBid": "[resourceID('Microsoft.Network/loadBalancers',variables('internalLBName'))]",
        "internalLB_BE2Id": "[concat(variables('internalLBid'),'/backendAddressPools/',variables('internalLBBE2Name'))]",
        "compute_VM_fga_Name": "[variables('vmName')]",
        "compute_VM_fgb_Name": "[variables('vm2Name')]",
        "network_NIC_fga1_Name": "[concat(variables('vmName'),'-port1')]",
        "network_NIC_fga2_Name": "[concat(variables('vmName'),'-port2')]",
        "network_NIC_fgb1_Name": "[concat(variables('vm2Name'),'-port1')]",
        "network_NIC_fgb2_Name": "[concat(variables('vm2Name'),'-port2')]",
        "publicIPID": "[resourceID('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
        "publicIPSuffix": "[substring(uniqueString(variables('publicIPID')),0,4)]",
        "NSGName": "[parameters('FortiGateNamePrefix')]",
        "sn2IPArray": "[split(parameters('Subnet2Prefix'),'.')]",
        "sn2IPArray2ndString": "[string(variables('sn2IPArray')[3])]",
        "sn2IPArray2nd": "[split(variables('sn2IPArray2ndString'),'/')]",
        "sn2IPArray3": "[string(add(int(variables('sn2IPArray2nd')[0]),1))]",
        "sn2IPArray2": "[string(int(variables('sn2IPArray')[2]))]",
        "sn2IPArray1": "[string(int(variables('sn2IPArray')[1]))]",
        "sn2IPArray0": "[string(int(variables('sn2IPArray')[0]))]",
        "sn2GatewayIP": "[concat(variables('sn2IPArray0'),'.',variables('sn2IPArray1'),'.',variables('sn2IPArray2'),'.',variables('sn2IPArray3'))]",
        "network_LB_Public_NatRule_FGAdminPerm_fga_Name": "[concat(variables('VMName'),'-Management-HTTPS')]",
        "network_LB_Public_NatRule_FGAdminPerm_fga_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_FGAdminPerm_fga_Name'))]",
        "network_LB_Public_NatRule_SSH_fga_Name": "[concat(variables('VMName'),'-Management-SSH')]",
        "network_LB_Public_NatRule_SSH_fga_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_SSH_fga_Name'))]",
        "network_LB_Public_NatRule_FGAdminPerm_fgb_Name": "[concat(variables('VM2Name'),'-Management-HTTPS')]",
        "network_LB_Public_NatRule_FGAdminPerm_fgb_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_FGAdminPerm_fgb_Name'))]",
        "network_LB_Public_NatRule_SSH_fgb_Name": "[concat(variables('VM2Name'),'-Management-SSH')]",
        "network_LB_Public_NatRule_SSH_fgb_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_SSH_fgb_Name'))]",
        "network_LB_Public_Name": "[parameters('FortiGateNamePrefix')]",
        "network_LB_Public_Id": "[resourceId('Microsoft.Network/loadBalancers',variables('network_LB_Public_Name'))]",
        "network_LB_Public_FEName": "[concat(parameters('FortiGateNamePrefix'),'publicLBFE')]",
        "network_LB_Public_FEId": "[concat(variables('network_LB_Public_Id'),'/frontendIPConfigurations/',variables('network_LB_Public_FEName'))]",
        "network_LB_Public_BEName": "[concat(parameters('FortiGateNamePrefix'),'publicLBBE')]",
        "network_LB_Public_BEId": "[concat(variables('network_LB_Public_Id'),'/backendAddressPools/',variables('network_LB_Public_BEName'))]"
    },
    "functions": [
        {
            "namespace": "func",
            "members": {
                "refId": {
                    "parameters": [
                        {
                            "name": "FullReference",
                            "type": "Object"
                        }
                    ],
                    "output": {
                        "type": "String",
                        "value": "[
                            resourceId(
                                concat(
                                split(
                                    parameters('FullReference').resourceId,
                                    '/'
                                )[
                                    sub(
                                    length(
                                    split(
                                        parameters('FullReference').resourceId,
                                        '/'
                                    )
                                    ),
                                    3
                                )],
                                '/',
                                split(
                                    parameters('FullReference').resourceId,
                                    '/'
                                )[
                                    sub(
                                    length(
                                    split(
                                        parameters('FullReference').resourceId,
                                        '/'
                                    )
                                    ),
                                    2
                                )]
                                ),
                                last(
                                split(
                                    parameters('FullReference').resourceId,
                                    '/'
                                )
                                )
                            )
                        ]"
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2019-07-01",
            "name": "[variables('compute_AvailabilitySet_FG_Name')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('vnetAddressPrefixes')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('Subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('Subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('Subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('Subnet2Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('Subnet3Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('Subnet3Prefix')]"
                        }
                    }
                ]
            },
            "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIP1AllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(concat(parameters('FortiGateNamePrefix'),'-',variables('publicIPSuffix')))]"
                }
            },
            "condition": "[equals(parameters('publicIPNewOrExisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('internalLBName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('vnetName')]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('internalLBFE2Name')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('internalLBBE2Name')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('internalLBName'), variables('internalLBFE2Name'))]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('internalLBName'), variables('internalLBBE2Name'))]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('internalLBName'), 'lbprobe')]"
                            },
                            "protocol": "all",
                            "frontendPort": 0,
                            "backendPort": 0,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 15
                        },
                        "name": "lbruleFE2all"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 8008,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        },
                        "name": "lbprobe"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[variables('routeTable2Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('internalLBName')]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "properties": {
                "routes": [
                    {
                        "name": "[variables('internalLBName')]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIPAddress": "[reference(concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))).frontendIPConfigurations[0].properties.privateIPAddress]"
                        }
                    }
                ],
                "subnets": [
                    {
                        "id": "[variables('subnet2Ref')]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('NSGName')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAllInbound",
                        "properties": {
                            "description": "Allow all in",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAllOutbound",
                        "properties": {
                            "description": "Allow all out",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('network_LB_Public_Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('publicIPID')]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('network_LB_Public_FEName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIPID')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('network_LB_Public_BEName')]"
                    }
                ],
                "loadBalancingRules": [],
                "inboundNatRules": [
                    {
                        "name": "[variables('network_LB_Public_NatRule_SSH_fga_Name')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('network_LB_Public_FEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": "[parameters('fgaManagementSshPort')]",
                            "backendPort": 22,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "[variables('network_LB_Public_NatRule_FGAdminPerm_fga_Name')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('network_LB_Public_FEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": "[parameters('fgaManagementHttpPort')]",
                            "backendPort": 443,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "[variables('network_LB_Public_NatRule_SSH_fgb_Name')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('network_LB_Public_FEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": "[parameters('fgbManagementSshPort')]",
                            "backendPort": 22,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "[variables('network_LB_Public_NatRule_FGAdminPerm_fgb_Name')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('network_LB_Public_FEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": "[parameters('fgbManagementHttpPort')]",
                            "backendPort": 443,
                            "enableFloatingIP": false
                        }
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 8008,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        },
                        "name": "lbprobe"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('network_NIC_fga1_Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('network_LB_Public_Id')]",
                "[parameters('vnetName')]",
                "[variables('NSGName')]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[parameters('Subnet1Name')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('network_LB_Public_BEId')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[variables('network_LB_Public_NatRule_SSH_fga_Id')]"
                                },
                                {
                                    "id": "[variables('network_LB_Public_NatRule_FGAdminPerm_fga_Id')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": true,
                "networkSecurityGroup": {
                    "id": "[resourceID('Microsoft.Network/networkSecurityGroups/',variables('NSGName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('network_NIC_fga2_Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))]",
                "[parameters('vnetName')]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[parameters('Subnet2Name')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('internalLB_BE2Id')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": true
            }
        },
        
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[variables('compute_VM_fga_Name')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "plan": {
                "name": "[parameters('FortiGateImageSKU')]",
                "publisher": "fortinet",
                "product": "fortinet_fortigate-vm_v5"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "availabilitySet": {
                    "id": "[func.refid(reference(resourceId('Microsoft.Compute/availabilitySets',variables('compute_AvailabilitySet_FG_Name')),'2020-06-01','Full'))]"
                },
                "osProfile": {
                    "computerName": "[variables('compute_VM_fga_Name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": "[if(
                        empty(parameters('adminPublicKey')),
                        json('null'),
                        variables('vmPublicKeyConfiguration')
                    )]",
                    "customData": "[variables('FortiGateConfig')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "fortinet",
                        "offer": "fortinet_fortigate-vm_v5",
                        "sku": "[parameters('FortiGateImageSKU')]",
                        "version": "[parameters('FortiGateImageVersion')]"
                    },
                    "osDisk": {
                        "name": "[variables('vmName')]",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(variables('vmName'),'-data')]",
                            "diskSizeGB": "[parameters('vmLogDiskSizeGB')]",
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(
                            resourceId(
                                'Microsoft.Storage/storageAccounts',
                                variables('vmDiagnosticStorageName') 
                            ), '2019-06-01'
                        ).primaryEndpoints.blob]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[func.refid(reference(variables('network_NIC_fga1_Name'),'2020-07-01','Full'))]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[func.refid(reference(variables('network_NIC_fga2_Name'),'2020-07-01','Full'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('network_NIC_fgb1_Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('network_LB_Public_Id')]",
                "[variables('network_NIC_fga1_Name')]",
                "[parameters('vnetName')]",
                "[variables('NSGName')]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[parameters('Subnet1Name')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('network_LB_Public_BEId')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[variables('network_LB_Public_NatRule_SSH_fgb_Id')]"
                                },
                                {
                                    "id": "[variables('network_LB_Public_NatRule_FGAdminPerm_fgb_Id')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": true,
                "networkSecurityGroup": {
                    "id": "[resourceID('Microsoft.Network/networkSecurityGroups/',variables('NSGName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('network_NIC_fgb2_Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('internalLBName'))]",
                "[parameters('vnetName')]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[parameters('Subnet2Name')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('internalLBName'),variables('internalLBBE2Name'))]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": true
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[variables('compute_VM_fgb_Name')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('FortinetTags').provider)]"
            },
            "plan": {
                "name": "[parameters('FortiGateImageSKU')]",
                "publisher": "fortinet",
                "product": "fortinet_fortigate-vm_v5"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "availabilitySet": {
                    "id": "[func.refid(reference(resourceId('Microsoft.Compute/availabilitySets',variables('compute_AvailabilitySet_FG_Name')),'2020-06-01','Full'))]"
                },
                "osProfile": {
                    "computerName": "[variables('compute_VM_fgb_Name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": "[if(
                        empty(parameters('adminPublicKey')),
                        json('null'),
                        variables('vmPublicKeyConfiguration')
                    )]",
                    "customData": "[variables('FortiGateConfig')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "fortinet",
                        "offer": "fortinet_fortigate-vm_v5",
                        "sku": "[parameters('FortiGateImageSKU')]",
                        "version": "[parameters('FortiGateImageVersion')]"
                    },
                    "osDisk": {
                        "name": "[variables('vm2Name')]",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(variables('vm2Name'),'-data')]",
                            "diskSizeGB": "[parameters('vmLogDiskSizeGB')]",
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(
                                resourceId(
                                    'Microsoft.Storage/storageAccounts',
                                    variables('vmDiagnosticStorageName') 
                                ), '2019-06-01'
                        ).primaryEndpoints['blob']]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[func.refid(reference(variables('network_NIC_fgb1_Name'),'2020-07-01','Full'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[func.refid(reference(variables('network_NIC_fgb2_Name'),'2020-07-01','Full'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('vmDiagnosticStorageName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "tags": {
                "displayName": "[variables('vmDiagnosticStorageName')]"
            },
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        }
    ],
    "outputs": {
        "fgManagementUser": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        },
        "fgaManagementURI": {
            "type": "String",
            "value": "[concat(
                'https://',
                reference(variables('publicIPId')).dnsSettings.fqdn,
                ':',
                parameters('fgaManagementHttpPort'),
                '/'
            )]"
        },
        "fgbManagementURI": {
            "type": "String",
            "value": "[concat(
                'https://',
                reference(variables('publicIPId')).dnsSettings.fqdn,
                ':',
                parameters('fgbManagementHttpPort'),
                '/'
            )]"
        },
        "fgaManagementSSHCommand": {
            "type": "String",
            "value": "[format(
                'ssh {0}@{1} -p {2}', 
                parameters('adminUsername'),
                reference(variables('publicIPId')).dnsSettings.fqdn,
                parameters('fgaManagementSshPort')
            )]"
        },
        "fgbManagementSSHCommand": {
            "type": "String",
            "value": "[format(
                'ssh {0}@{1} -p {2}', 
                parameters('adminUsername'),
                reference(variables('publicIPId')).dnsSettings.fqdn,
                parameters('fgbManagementSshPort')
            )]"
        },
        "fgaManagementSSHConfig": {
            "type": "String",
            "value": "[concat(
                'Host ', variables('compute_VM_fga_Name'), '\n',
                '  HostName ', reference(variables('publicIPId')).dnsSettings.fqdn, '\n',
                '  Port ', parameters('fgaManagementSshPort'),'\n',
                '  User ', parameters('adminUsername')
            )]"
        },
        "fgbManagementSSHConfig": {
            "type": "String",
            "value": "[concat(
                'Host ', variables('compute_VM_fgb_Name'), '\n',
                '  HostName ', reference(variables('publicIPId')).dnsSettings.fqdn, '\n',
                '  Port ', parameters('fgbManagementSshPort'),'\n',
                '  User ', parameters('adminUsername')
            )]"
        }
    }
}